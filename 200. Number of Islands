class Solution {
    public int numIslands(char[][] grid) {
        int count = 0;
        
        for(int i=0; i<grid.length; i++){
            for(int j=0; j<grid[i].length; j++){
                if(grid[i][j] == '1'){ //find 1 on grid
                    count++;
                    callBFS(grid, i, j);
                }
            }
        }
        return count;
        
    }
    
    public void callBFS(char[][] grid, int i, int j){
    if (i<0 || i>=grid.length || j<0 || j>=grid[i].length || grid[i][j] =='0')
        return; //break out of method
    
        grid[i][j] = '0'; //Visited element set to zero to avoid re-visit
        callBFS(grid, i-1, j); //up 
        callBFS(grid, i, j-1); //down
        callBFS(grid, i+1, j); //left
        callBFS(grid, i, j+1); //right  
    }
}
